{"version":3,"sources":["components/AddCategory.js","helpers/geetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","SetInputValue","onSubmit","e","preventDefault","trim","length","arr","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OAEI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAG,OAAIP,GAAJ,mBAAkBO,OACnCN,EAAc,MASlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAE,WAAOC,GAAP,uBAAAC,EAAA,6DACZC,EADY,iDACqCC,UAAWH,GADhD,+DAEMI,MAAMF,GAFZ,cAEZG,EAFY,gBAGGA,EAAUC,OAHb,uBAGXC,EAHW,EAGXA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATxB,kBAcXM,GAdW,4CAAF,sDCEPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAG/B,OACI,sBAAKc,UAAU,yDAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCiBDO,EApBC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAEV,ECJoB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OAjBAC,qBAAU,WAENxB,EAAQC,GACPwB,MAAK,SAAAC,GAEFC,YAAW,WACPJ,EAAS,CACLf,KAAKkB,EACLL,SAAQ,MAEb,UAIT,CAACpB,IAGIqB,EDnB2BM,CAAa3B,GAA/Ba,EAAZ,EAAON,KAAYa,EAAnB,EAAmBA,QAEvB,OACI,qCACA,oBAAIJ,UAAU,oDAAd,SAAmEhB,IAC9DoB,GAAW,mBAAGJ,UAAU,mDAAb,0BAChB,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAI,SAAAC,GAAG,OAAI,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEgB7CiB,EA3BM,WAEjB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAMA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAGQ4C,EAAWpB,KAAI,SAACT,GAAD,OAAc,cAAC,EAAD,CAASA,SAAUA,GAAeA,Y,MChBnF8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.d685edac.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\n\nexport const AddCategory = ({setCategories}) => {\n    const [inputValue, SetInputValue] = useState('');\n    const handleInputChange = (e) => {\n        SetInputValue(e.target.value)\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim().length > 2) {\n            setCategories(arr =>[inputValue,...arr])\n            SetInputValue('')\n\n        }\n        \n    }\n\n\n    return (\n\n        <form onSubmit={handleSubmit}>\n            <input\n                type='text'\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n\n    )\n}\nAddCategory.propTypes ={\n    setCategories: PropTypes.func.isRequired\n}\n","export const getGifs= async (category)=>{\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=A8xMXqzieIHmtO3BjGLAtf1daSSDAv8K`;\n    const respuesta = await fetch(url);\n    const {data} = await respuesta.json();\n\n    const gifs = data.map(img =>{\n        return{\n            id:img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    // console.log(gifs);\n    return gifs;\n\n}","import React from 'react'\n\nexport const GifGridItem = ({title,url}) => {\n\n    // console.log(url)\n    return (\n        <div className='card animate__animated animate__bounce animate__fadeIn'>\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n\n        </div>\n    )\n}\n","import React  from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\n// import { getGifs } from '../helpers/geetGifs'\nimport { GifGridItem } from './GifGridItem'\n\nconst GifGrid = ({category}) => {\n\n        const {data:images,loading} = useFetchGifs(category);\n\n    return (\n        <>\n        <h3 className='animate__animated animate__bounce animate__fadeIn'>{category}</h3>\n            {loading && <p className='animate__animated animate__bounce animate__flash'>Cargando....</p>}\n        <div className='card-grid'>\n                {\n                    images.map(img => <GifGridItem key={img.id} {...img}/>)\n                }\n        \n        </div>\n\n\n        </>\n    )\n}\n\nexport default GifGrid\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/geetGifs\";\n\nexport const useFetchGifs = (category)=>{\n    const [state, setState] = useState({\n        data:[],\n        loading:true\n    });\n\n    useEffect(()=>{\n\n        getGifs(category)\n        .then(imgs =>{\n\n            setTimeout(() => {\n                setState({\n                    data:imgs,\n                    loading:false\n                });\n            }, 1000);\n            \n        })\n\n    },[category])\n\n\n    return state;\n}","import { useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport GifGrid from \"./components/GifGrid\";\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One Punch']);\n\n    // const handleAdd =()=>{\n    //     setCategories(['goku',...categories])\n    // }\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr />\n\n            <ol>\n\n                {\n                    categories.map((category) => <GifGrid category={category} key={category}/>)\n                }\n\n            </ol>\n\n\n        </>\n    )\n}\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n  \n);\n"],"sourceRoot":""}